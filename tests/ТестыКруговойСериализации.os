#Использовать asserts
#Использовать ".."
#Использовать "."

&ТестовыйНабор
Процедура ПриСозданииОбъекта() Экспорт
КонецПроцедуры

&Тест
Процедура ТестКруговойСериализацииПростыхДанных() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("serialization_simple.yaml"));
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда - читаем исходные данные
    ИсходныеДанные = Парсер.ПрочитатьYaml(СодержимоеФайла);
    
    // Сериализуем обратно в YAML
    СериализованныеДанные = Парсер.ЗаписатьYaml(ИсходныеДанные);
    
    // Читаем сериализованные данные
    ВосстановленныеДанные = Парсер.ПрочитатьYaml(СериализованныеДанные);
    
    // Тогда - данные должны остаться неизменными
    Ожидаем.Что(ВосстановленныеДанные.Получить("name")).Равно(ИсходныеДанные.Получить("name"));
    Ожидаем.Что(ВосстановленныеДанные.Получить("age")).Равно(ИсходныеДанные.Получить("age"));
    Ожидаем.Что(ВосстановленныеДанные.Получить("active")).Равно(ИсходныеДанные.Получить("active"));
    Ожидаем.Что(ВосстановленныеДанные.Получить("salary")).Равно(ИсходныеДанные.Получить("salary"));
КонецПроцедуры

&Тест
Процедура ТестКруговойСериализацииМассива() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("serialization_array.yaml"));
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда - круговая сериализация
    ИсходныеДанные = Парсер.ПрочитатьYaml(СодержимоеФайла);
    СериализованныеДанные = Парсер.ЗаписатьYaml(ИсходныеДанные);
    ВосстановленныеДанные = Парсер.ПрочитатьYaml(СериализованныеДанные);
    
    // Тогда - массивы должны быть идентичными
    Ожидаем.Что(ТипЗнч(ВосстановленныеДанные)).Равно(Тип("Массив"));
    Ожидаем.Что(ВосстановленныеДанные.Количество()).Равно(ИсходныеДанные.Количество());
    
    Для Индекс = 0 По ИсходныеДанные.ВГраница() Цикл
        Ожидаем.Что(ВосстановленныеДанные[Индекс]).Равно(ИсходныеДанные[Индекс]);
    КонецЦикла;
КонецПроцедуры

&Тест
Процедура ТестКруговойСериализацииВложенныхСтруктур() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("serialization_nested.yaml"));
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда - круговая сериализация
    ИсходныеДанные = Парсер.ПрочитатьYaml(СодержимоеФайла);
    СериализованныеДанные = Парсер.ЗаписатьYaml(ИсходныеДанные);
    ВосстановленныеДанные = Парсер.ПрочитатьYaml(СериализованныеДанные);
    
    // Тогда - вложенные структуры должны сохраниться
    ИсходныйПользователь = ИсходныеДанные.Получить("user");
    ВосстановленныйПользователь = ВосстановленныеДанные.Получить("user");
    
    Ожидаем.Что(ВосстановленныйПользователь.Получить("name")).Равно(ИсходныйПользователь.Получить("name"));
    Ожидаем.Что(ВосстановленныйПользователь.Получить("age")).Равно(ИсходныйПользователь.Получить("age"));
    
    // Проверяем вложенный адрес
    ИсходныйАдрес = ИсходныйПользователь.Получить("address");
    ВосстановленныйАдрес = ВосстановленныйПользователь.Получить("address");
    
    Ожидаем.Что(ВосстановленныйАдрес.Получить("street")).Равно(ИсходныйАдрес.Получить("street"));
    Ожидаем.Что(ВосстановленныйАдрес.Получить("city")).Равно(ИсходныйАдрес.Получить("city"));
    Ожидаем.Что(ВосстановленныйАдрес.Получить("country")).Равно(ИсходныйАдрес.Получить("country"));
    
    // Проверяем массив хобби
    ИсходныеХобби = ИсходныйПользователь.Получить("hobbies");
    ВосстановленныеХобби = ВосстановленныйПользователь.Получить("hobbies");
    
    Ожидаем.Что(ВосстановленныеХобби.Количество()).Равно(ИсходныеХобби.Количество());
    Для Индекс = 0 По ИсходныеХобби.ВГраница() Цикл
        Ожидаем.Что(ВосстановленныеХобби[Индекс]).Равно(ИсходныеХобби[Индекс]);
    КонецЦикла;
КонецПроцедуры

&Тест
Процедура ТестКруговойСериализацииМассиваОбъектов() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("serialization_array_objects.yaml"));
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда - круговая сериализация
    ИсходныеДанные = Парсер.ПрочитатьYaml(СодержимоеФайла);
    СериализованныеДанные = Парсер.ЗаписатьYaml(ИсходныеДанные);
    ВосстановленныеДанные = Парсер.ПрочитатьYaml(СериализованныеДанные);
    
    // Тогда - структура с массивом объектов должна сохраниться
    Ожидаем.Что(ТипЗнч(ВосстановленныеДанные)).Равно(Тип("Соответствие"));
    
    ИсходныйМассив = ИсходныеДанные.Получить("items");
    ВосстановленныйМассив = ВосстановленныеДанные.Получить("items");
    
    Ожидаем.Что(ТипЗнч(ВосстановленныйМассив)).Равно(Тип("Массив"));
    Ожидаем.Что(ВосстановленныйМассив.Количество()).Равно(ИсходныйМассив.Количество());
    
    Для Индекс = 0 По ИсходныйМассив.ВГраница() Цикл
        ИсходныйОбъект = ИсходныйМассив[Индекс];
        ВосстановленныйОбъект = ВосстановленныйМассив[Индекс];
        
        Ожидаем.Что(ВосстановленныйОбъект.Получить("name")).Равно(ИсходныйОбъект.Получить("name"));
        Ожидаем.Что(ВосстановленныйОбъект.Получить("value")).Равно(ИсходныйОбъект.Получить("value"));
        Ожидаем.Что(ВосстановленныйОбъект.Получить("active")).Равно(ИсходныйОбъект.Получить("active"));
    КонецЦикла;
КонецПроцедуры

&Тест
Процедура ТестСериализацииИдентичностиДанных() Экспорт
    // Дано - создаем сложную структуру программно
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    КорневаяСтруктура = Новый Структура;
    
    // Простые типы
    КорневаяСтруктура.Вставить("строка", "тестовая строка");
    КорневаяСтруктура.Вставить("число", 42);
    КорневаяСтруктура.Вставить("вещественное", 3.14159);
    КорневаяСтруктура.Вставить("булево_истина", Истина);
    КорневаяСтруктура.Вставить("булево_ложь", Ложь);
    КорневаяСтруктура.Вставить("неопределено", Неопределено);
    
    // Массив смешанных типов
    СмешанныйМассив = Новый Массив;
    СмешанныйМассив.Добавить("строка в массиве");
    СмешанныйМассив.Добавить(123);
    СмешанныйМассив.Добавить(Истина);
    КорневаяСтруктура.Вставить("смешанный_массив", СмешанныйМассив);
    
    // Вложенная структура
    ВложеннаяСтруктура = Новый Структура;
    ВложеннаяСтруктура.Вставить("вложенная_строка", "значение");
    ВложеннаяСтруктура.Вставить("вложенное_число", 999);
    КорневаяСтруктура.Вставить("вложенная_структура", ВложеннаяСтруктура);
    
    // Когда - выполняем круговую сериализацию
    СериализованныеДанные = Парсер.ЗаписатьYaml(КорневаяСтруктура);
    ВосстановленныеДанные = Парсер.ПрочитатьYaml(СериализованныеДанные);
    
    // Тогда - проверяем все типы данных
    Ожидаем.Что(ВосстановленныеДанные.Получить("строка")).Равно("тестовая строка");
    Ожидаем.Что(ВосстановленныеДанные.Получить("число")).Равно(42);
    Ожидаем.Что(ВосстановленныеДанные.Получить("вещественное")).Равно(3.14159);
    Ожидаем.Что(ВосстановленныеДанные.Получить("булево_истина")).Равно(Истина);
    Ожидаем.Что(ВосстановленныеДанные.Получить("булево_ложь")).Равно(Ложь);
    Ожидаем.Что(ВосстановленныеДанные.Получить("неопределено")).Равно(Неопределено);
    
    // Проверяем массив
    ВосстановленныйМассив = ВосстановленныеДанные.Получить("смешанный_массив");
    Ожидаем.Что(ТипЗнч(ВосстановленныйМассив)).Равно(Тип("Массив"));
    Ожидаем.Что(ВосстановленныйМассив.Количество()).Равно(3);
    Ожидаем.Что(ВосстановленныйМассив[0]).Равно("строка в массиве");
    Ожидаем.Что(ВосстановленныйМассив[1]).Равно(123);
    Ожидаем.Что(ВосстановленныйМассив[2]).Равно(Истина);
    
    // Проверяем вложенную структуру
    ВосстановленнаяВложеннаяСтруктура = ВосстановленныеДанные.Получить("вложенная_структура");
    Ожидаем.Что(ВосстановленнаяВложеннаяСтруктура.Получить("вложенная_строка")).Равно("значение");
    Ожидаем.Что(ВосстановленнаяВложеннаяСтруктура.Получить("вложенное_число")).Равно(999);
КонецПроцедуры
