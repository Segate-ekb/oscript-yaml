#Использовать asserts
#Использовать ".."
#Использовать "."

&ТестовыйНабор
Процедура ПриСозданииОбъекта() Экспорт
КонецПроцедуры

&Тест
Процедура ТестСериализацииПростыхТипов() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда - Тогда (строка)
    РезультатСтроки = Парсер.ЗаписатьYaml("Hello World");
    Ожидаем.Что(РезультатСтроки).Равно("Hello World");
    
    // Когда - Тогда (число)
    РезультатЧисла = Парсер.ЗаписатьYaml(42);
    Ожидаем.Что(РезультатЧисла).Равно("42");
    
    // Когда - Тогда (булево true)
    РезультатБулевоИстина = Парсер.ЗаписатьYaml(Истина);
    Ожидаем.Что(РезультатБулевоИстина).Равно("true");
    
    // Когда - Тогда (булево false)
    РезультатБулевоЛожь = Парсер.ЗаписатьYaml(Ложь);
    Ожидаем.Что(РезультатБулевоЛожь).Равно("false");
    
    // Когда - Тогда (null)
    РезультатNull = Парсер.ЗаписатьYaml(Неопределено);
    Ожидаем.Что(РезультатNull).Равно("null");
КонецПроцедуры

&Тест
Процедура ТестСериализацииСтрокСКавычками() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда - Тогда (пустая строка)
    РезультатПустойСтроки = Парсер.ЗаписатьYaml("");
    Ожидаем.Что(РезультатПустойСтроки).Равно("""""");
    
    // Когда - Тогда (строка с двоеточием)
    РезультатСДвоеточием = Парсер.ЗаписатьYaml("key: value");
    Ожидаем.Что(РезультатСДвоеточием).Равно("""key: value""");
    
    // Когда - Тогда (строка, похожая на булево)
    РезультатЛожнооБулево = Парсер.ЗаписатьYaml("true");
    Ожидаем.Что(РезультатЛожнооБулево).Равно("""true""");
    
    // Когда - Тогда (строка, похожая на число)
    РезультатЛожноеЧисло = Парсер.ЗаписатьYaml("123");
    Ожидаем.Что(РезультатЛожноеЧисло).Равно("""123""");
КонецПроцедуры

&Тест
Процедура ТестСериализацииПростойСтруктуры() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    Данные = Новый Структура;
    Данные.Вставить("name", "John Doe");
    Данные.Вставить("age", 30);
    Данные.Вставить("active", Истина);
    
    // Когда
    Результат = Парсер.ЗаписатьYaml(Данные);
    
    // Тогда
    Ожидаем.Что(Результат).Не_().ЭтоНеопределено();
    Ожидаем.Что(СтрНайти(Результат, "name: John Doe")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "age: 30")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "active: true")).Больше(0);
    
    // Проверяем обратную совместимость - парсинг сериализованного результата
    ВосстановленныеДанные = Парсер.ПрочитатьYaml(Результат);
    Ожидаем.Что(ВосстановленныеДанные.Получить("name")).Равно("John Doe");
    Ожидаем.Что(ВосстановленныеДанные.Получить("age")).Равно(30);
    Ожидаем.Что(ВосстановленныеДанные.Получить("active")).Равно(Истина);
КонецПроцедуры

&Тест
Процедура ТестСериализацииПростогоМассива() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    Массив = Новый Массив;
    Массив.Добавить("apple");
    Массив.Добавить("banana");
    Массив.Добавить("orange");
    
    // Когда
    Результат = Парсер.ЗаписатьYaml(Массив);
    
    // Тогда
    Ожидаем.Что(Результат).Не_().ЭтоНеопределено();
    Ожидаем.Что(СтрНайти(Результат, "- apple")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "- banana")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "- orange")).Больше(0);
    
    // Проверяем обратную совместимость - парсинг сериализованного результата
    ВосстановленныйМассив = Парсер.ПрочитатьYaml(Результат);
    Ожидаем.Что(ТипЗнч(ВосстановленныйМассив)).Равно(Тип("Массив"));
    Ожидаем.Что(ВосстановленныйМассив.Количество()).Равно(3);
    Ожидаем.Что(ВосстановленныйМассив[0]).Равно("apple");
    Ожидаем.Что(ВосстановленныйМассив[1]).Равно("banana");
    Ожидаем.Что(ВосстановленныйМассив[2]).Равно("orange");
КонецПроцедуры

&Тест
Процедура ТестСериализацииПустыхКоллекций() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда - Тогда (пустой массив)
    ПустойМассив = Новый Массив;
    РезультатПустогоМассива = Парсер.ЗаписатьYaml(ПустойМассив);
    Ожидаем.Что(РезультатПустогоМассива).Равно("[]");
    
    // Когда - Тогда (пустая структура)
    ПустаяСтруктура = Новый Структура;
    РезультатПустойСтруктуры = Парсер.ЗаписатьYaml(ПустаяСтруктура);
    Ожидаем.Что(РезультатПустойСтруктуры).Равно("{}");
    
    // Когда - Тогда (пустое соответствие)
    ПустоеСоответствие = Новый Соответствие;
    РезультатПустогоСоответствия = Парсер.ЗаписатьYaml(ПустоеСоответствие);
    Ожидаем.Что(РезультатПустогоСоответствия).Равно("{}");
КонецПроцедуры

&Тест
Процедура ТестСериализацииВложенныхСтруктур() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    Адрес = Новый Структура;
    Адрес.Вставить("street", "123 Main St");
    Адрес.Вставить("city", "New York");
    
    Пользователь = Новый Структура;
    Пользователь.Вставить("name", "John Doe");
    Пользователь.Вставить("age", 30);
    Пользователь.Вставить("address", Адрес);
    
    // Когда
    Результат = Парсер.ЗаписатьYaml(Пользователь);
    
    // Тогда
    Ожидаем.Что(Результат).Не_().ЭтоНеопределено();
    Ожидаем.Что(СтрНайти(Результат, "name: John Doe")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "age: 30")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "address:")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "street: 123 Main St")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "city: New York")).Больше(0);
    
    // Проверяем обратную совместимость
    ВосстановленныеДанные = Парсер.ПрочитатьYaml(Результат);
    Ожидаем.Что(ВосстановленныеДанные.Получить("name")).Равно("John Doe");
    Ожидаем.Что(ВосстановленныеДанные.Получить("age")).Равно(30);
    
    ВосстановленныйАдрес = ВосстановленныеДанные.Получить("address");
    Ожидаем.Что(ВосстановленныйАдрес).Не_().ЭтоНеопределено();
    Ожидаем.Что(ВосстановленныйАдрес.Получить("street")).Равно("123 Main St");
    Ожидаем.Что(ВосстановленныйАдрес.Получить("city")).Равно("New York");
КонецПроцедуры

&Тест
Процедура ТестСериализацииМассиваОбъектов() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    Объект1 = Новый Структура;
    Объект1.Вставить("name", "first");
    Объект1.Вставить("value", 1);
    
    Объект2 = Новый Структура;
    Объект2.Вставить("name", "second");
    Объект2.Вставить("value", 2);
    
    Массив = Новый Массив;
    Массив.Добавить(Объект1);
    Массив.Добавить(Объект2);
    
    // Оборачиваем массив в структуру, так как парсер не поддерживает массивы верхнего уровня
    Структура = Новый Структура;
    Структура.Вставить("items", Массив);
    
    // Когда
    Результат = Парсер.ЗаписатьYaml(Структура);
    
    // Тогда
    Ожидаем.Что(Результат).Не_().ЭтоНеопределено();
    Ожидаем.Что(СтрНайти(Результат, "items:")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "name: first")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "name: second")).Больше(0);
    
    // Проверяем обратную совместимость
    ВосстановленныеДанные = Парсер.ПрочитатьYaml(Результат);
    Ожидаем.Что(ТипЗнч(ВосстановленныеДанные)).Равно(Тип("Соответствие"));
    
    ВосстановленныйМассив = ВосстановленныеДанные.Получить("items");
    Ожидаем.Что(ВосстановленныйМассив).Не_().ЭтоНеопределено();
    Ожидаем.Что(ТипЗнч(ВосстановленныйМассив)).Равно(Тип("Массив"));
    Ожидаем.Что(ВосстановленныйМассив.Количество()).Равно(2);
    
    ВосстановленныйОбъект1 = ВосстановленныйМассив[0];
    ВосстановленныйОбъект2 = ВосстановленныйМассив[1];
    
    Ожидаем.Что(ВосстановленныйОбъект1.Получить("name")).Равно("first");
    Ожидаем.Что(ВосстановленныйОбъект1.Получить("value")).Равно(1);
    
    Ожидаем.Что(ВосстановленныйОбъект2.Получить("name")).Равно("second");
    Ожидаем.Что(ВосстановленныйОбъект2.Получить("value")).Равно(2);
КонецПроцедуры

&Тест
Процедура ТестСериализацииСоответствия() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    Соответствие = Новый Соответствие;
    Соответствие.Вставить("key1", "value1");
    Соответствие.Вставить("key2", 42);
    Соответствие.Вставить("key3", Истина);
    
    // Когда
    Результат = Парсер.ЗаписатьYaml(Соответствие);
    
    // Тогда
    Ожидаем.Что(Результат).Не_().ЭтоНеопределено();
    Ожидаем.Что(СтрНайти(Результат, "key1: value1")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "key2: 42")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "key3: true")).Больше(0);
    
    // Проверяем обратную совместимость
    ВосстановленноеСоответствие = Парсер.ПрочитатьYaml(Результат);
    Ожидаем.Что(ВосстановленноеСоответствие.Получить("key1")).Равно("value1");
    Ожидаем.Что(ВосстановленноеСоответствие.Получить("key2")).Равно(42);
    Ожидаем.Что(ВосстановленноеСоответствие.Получить("key3")).Равно(Истина);
КонецПроцедуры

&Тест
Процедура ТестСериализацииСложныхКлючей() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    Соответствие = Новый Соответствие;
    Соответствие.Вставить("simple", "value");
    Соответствие.Вставить("key with spaces", "value with spaces");
    Соответствие.Вставить("key:with:colons", "colon value");
    Соответствие.Вставить(123, "numeric key");
    Соответствие.Вставить(Истина, "boolean key");
    
    // Когда
    Результат = Парсер.ЗаписатьYaml(Соответствие);
    
    // Тогда
    Ожидаем.Что(Результат).Не_().ЭтоНеопределено();
    Ожидаем.Что(СтрНайти(Результат, "simple: value")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "key with spaces: value with spaces")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, """key:with:colons"": colon value")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "123: numeric key")).Больше(0);
    Ожидаем.Что(СтрНайти(Результат, "true: boolean key")).Больше(0);
КонецПроцедуры

&Тест
Процедура ТестСериализацииЧисел() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда - Тогда (целое число)
    РезультатЦелое = Парсер.ЗаписатьYaml(42);
    Ожидаем.Что(РезультатЦелое).Равно("42");
    
    // Когда - Тогда (отрицательное число)
    РезультатОтрицательное = Парсер.ЗаписатьYaml(-15);
    Ожидаем.Что(РезультатОтрицательное).Равно("-15");
    
    // Когда - Тогда (вещественное число)
    РезультатВещественное = Парсер.ЗаписатьYaml(3.14);
    Ожидаем.Что(СтрНайти(РезультатВещественное, "3")).Равно(1);
    Ожидаем.Что(СтрНайти(РезультатВещественное, "14")).Больше(0);
    
    // Когда - Тогда (ноль)
    РезультатНоль = Парсер.ЗаписатьYaml(0);
    Ожидаем.Что(РезультатНоль).Равно("0");
КонецПроцедуры

&Тест
Процедура ТестСериализацииСпециальныхСимволов() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Строка с переносами строк
    СтрокаСПереносами = "Первая строка" + Символы.ПС + "Вторая строка";
    РезультатПереносы = Парсер.ЗаписатьYaml(СтрокаСПереносами);
    Ожидаем.Что(СтрНайти(РезультатПереносы, "\n")).Больше(0); // JSON экранирует как \n
    
    // Строка с табами
    СтрокаСТабами = "Начало" + Символы.ВТаб + "Конец";
    РезультатТабы = Парсер.ЗаписатьYaml(СтрокаСТабами);
    Ожидаем.Что(СтрНайти(РезультатТабы, "u000b")).Больше(0); // Табы экранируются как unicode
    
    // Строка с кавычками
    СтрокаСКавычками = "Строка с ""кавычками""";
    РезультатКавычки = Парсер.ЗаписатьYaml(СтрокаСКавычками);
    Ожидаем.Что(СтрНайти(РезультатКавычки, "\""")).Больше(0);
КонецПроцедуры
