#Использовать asserts
#Использовать ".."
#Использовать "."

&ТестовыйНабор
Процедура ПриСозданииОбъекта() Экспорт
КонецПроцедуры

&Тест
Процедура ТестПарсингаПростогоJSON() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("complex_json.yaml"));
    ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда
    Результат = ЧтениеYaml.Прочитать(СодержимоеФайла);
    
    // Тогда
    Ожидаем.Что(Результат).Не_().ЭтоНеопределено();
    
    // Проверяем простые JSON объекты
    SimpleJSON = Результат.Получить("simple_json");
    Ожидаем.Что(SimpleJSON).Не_().ЭтоНеопределено();
    Ожидаем.Что(SimpleJSON.Получить("name")).Равно("John");
    Ожидаем.Что(SimpleJSON.Получить("age")).Равно(30);
    Ожидаем.Что(SimpleJSON.Получить("active")).Равно(Истина);
    
    UserJSON = Результат.Получить("user_json");
    Ожидаем.Что(UserJSON.Получить("id")).Равно(1);
    Ожидаем.Что(UserJSON.Получить("name")).Равно("Alice");
    Ожидаем.Что(UserJSON.Получить("email")).Равно("alice@example.com");
    Ожидаем.Что(UserJSON.Получить("verified")).Равно(Ложь);
    Ожидаем.Что(UserJSON.Получить("score")).Равно(95.5);
КонецПроцедуры

&Тест
Процедура ТестПарсингаМассивовJSON() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("complex_json.yaml"));
    ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда
    Результат = ЧтениеYaml.Прочитать(СодержимоеФайла);
    
    // Тогда
    // Проверяем массивы JSON
    TagsJSON = Результат.Получить("tags_json");
    Ожидаем.Что(TagsJSON.Количество()).Равно(3);
    Ожидаем.Что(TagsJSON[0]).Равно("production");
    Ожидаем.Что(TagsJSON[1]).Равно("api");
    Ожидаем.Что(TagsJSON[2]).Равно("v2");
    
    NumbersJSON = Результат.Получить("numbers_json");
    Ожидаем.Что(NumbersJSON.Количество()).Равно(5);
    Ожидаем.Что(NumbersJSON[0]).Равно(1);
    Ожидаем.Что(NumbersJSON[1]).Равно(2);
    Ожидаем.Что(NumbersJSON[2]).Равно(3.14);
    Ожидаем.Что(NumbersJSON[3]).Равно(-5);
    Ожидаем.Что(NumbersJSON[4]).Равно(0);
    
    MixedJSON = Результат.Получить("mixed_json");
    Ожидаем.Что(MixedJSON.Количество()).Равно(5);
    Ожидаем.Что(MixedJSON[0]).Равно(1);
    Ожидаем.Что(MixedJSON[1]).Равно("hello");
    Ожидаем.Что(MixedJSON[2]).Равно(Истина);
    Ожидаем.Что(MixedJSON[3]).ЭтоНеопределено();
    Ожидаем.Что(MixedJSON[4]).Равно(42.7);
КонецПроцедуры

&Тест  
Процедура ТестПарсингаВложенныхОбъектовJSON() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("complex_json.yaml"));
    ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда
    Результат = ЧтениеYaml.Прочитать(СодержимоеФайла);
    
    // Тогда
    // Проверяем вложенные объекты JSON
    NestedJSON = Результат.Получить("nested_json");
    Ожидаем.Что(NestedJSON).Не_().ЭтоНеопределено();
    
    User = NestedJSON.Получить("user");
    Ожидаем.Что(User.Получить("name")).Равно("Bob");
    Ожидаем.Что(User.Получить("age")).Равно(25);
    
    Preferences = NestedJSON.Получить("preferences");
    Ожидаем.Что(Preferences.Получить("theme")).Равно("dark");
    Ожидаем.Что(Preferences.Получить("notifications")).Равно(Истина);
КонецПроцедуры

&Тест
Процедура ТестПарсингаСложнойСтруктурыJSON() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("complex_json.yaml"));
    ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда
    Результат = ЧтениеYaml.Прочитать(СодержимоеФайла);
    
    // Тогда
    // Проверяем сложную структуру API JSON
    APIJSON = Результат.Получить("api_json");
    Ожидаем.Что(APIJSON).Не_().ЭтоНеопределено();
    Ожидаем.Что(APIJSON.Получить("version")).Равно("2.1.0");
    
    // Проверяем endpoints
    Endpoints = APIJSON.Получить("endpoints");
    Ожидаем.Что(Endpoints.Количество()).Равно(2);
    
    Endpoint1 = Endpoints[0];
    Ожидаем.Что(Endpoint1.Получить("path")).Равно("/users");
    Ожидаем.Что(Endpoint1.Получить("method")).Равно("GET");
    Ожидаем.Что(Endpoint1.Получить("auth")).Равно(Истина);
    
    Endpoint2 = Endpoints[1];
    Ожидаем.Что(Endpoint2.Получить("path")).Равно("/posts");
    Ожидаем.Что(Endpoint2.Получить("method")).Равно("POST");
    Ожидаем.Что(Endpoint2.Получить("auth")).Равно(Ложь);
    
    // Проверяем config
    Config = APIJSON.Получить("config");
    Ожидаем.Что(Config.Получить("timeout")).Равно(30000);
    Ожидаем.Что(Config.Получить("retries")).Равно(3);
    
    Cache = Config.Получить("cache");
    Ожидаем.Что(Cache.Получить("enabled")).Равно(Ложь);
    Ожидаем.Что(Cache.Получить("ttl")).ЭтоНеопределено();
    
    Features = Config.Получить("features");
    Ожидаем.Что(Features.Получить("graphql")).Равно(Истина);
    Ожидаем.Что(Features.Получить("websockets")).Равно(Ложь);
КонецПроцедуры

&Тест
Процедура ТестПарсингаСтатистикиJSON() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("complex_json.yaml"));
    ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда
    Результат = ЧтениеYaml.Прочитать(СодержимоеФайла);
    
    // Тогда
    APIJSON = Результат.Получить("api_json");
    Stats = APIJSON.Получить("stats");
    Ожидаем.Что(Stats).Не_().ЭтоНеопределено();
    
    // Проверяем числовые значения с плавающей точкой
    Ожидаем.Что(Stats.Получить("requests_per_minute")).Равно(1250.75);
    Ожидаем.Что(Stats.Получить("error_rate")).Равно(0.02);
    Ожидаем.Что(Stats.Получить("uptime")).Равно(99.99);
    
    // Проверяем массив строк
    Tags = Stats.Получить("tags");
    Ожидаем.Что(Tags.Количество()).Равно(2);
    Ожидаем.Что(Tags[0]).Равно("prod");
    Ожидаем.Что(Tags[1]).Равно("stable");
    
    // Проверяем пустые коллекции
    EmptyArray = Stats.Получить("empty_array");
    Ожидаем.Что(EmptyArray).Не_().ЭтоНеопределено();
    Ожидаем.Что(EmptyArray.Количество()).Равно(0);
    
    EmptyObject = Stats.Получить("empty_object");
    Ожидаем.Что(EmptyObject).Не_().ЭтоНеопределено();
    
    // Проверяем null значения
    NullValue = Stats.Получить("null_value");
    Ожидаем.Что(NullValue).ЭтоНеопределено();
КонецПроцедуры

&Тест
Процедура ТестПарсингаСпециальныхЗначенийJSON() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("complex_json.yaml"));
    ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда
    Результат = ЧтениеYaml.Прочитать(СодержимоеФайла);
    
    // Тогда - проверяем специальные значения JSON
    SpecialValues = Результат.Получить("special_values");
    Ожидаем.Что(SpecialValues).Не_().ЭтоНеопределено();
    
    // Проверяем все типы данных JSON:
    
    // 1. Строки (strings)
    Ожидаем.Что(SpecialValues.Получить("string")).Равно("test string");
    Ожидаем.Что(ТипЗнч(SpecialValues.Получить("string"))).Равно(Тип("Строка"));
    
    // 2. Числа (numbers) - целые и с плавающей точкой
    Ожидаем.Что(SpecialValues.Получить("integer")).Равно(42);
    Ожидаем.Что(ТипЗнч(SpecialValues.Получить("integer"))).Равно(Тип("Число"));
    
    Ожидаем.Что(SpecialValues.Получить("float")).Равно(3.14159);
    Ожидаем.Что(ТипЗнч(SpecialValues.Получить("float"))).Равно(Тип("Число"));
    
    // 3. Булевы значения (booleans)
    Ожидаем.Что(SpecialValues.Получить("boolean_true")).Равно(Истина);
    Ожидаем.Что(ТипЗнч(SpecialValues.Получить("boolean_true"))).Равно(Тип("Булево"));
    
    Ожидаем.Что(SpecialValues.Получить("boolean_false")).Равно(Ложь);
    Ожидаем.Что(ТипЗнч(SpecialValues.Получить("boolean_false"))).Равно(Тип("Булево"));
    
    // 4. null значения  
    NullValue = SpecialValues.Получить("null_value");
    Ожидаем.Что(NullValue).ЭтоНеопределено();
    
    // 5. Пустые значения
    EmptyString = SpecialValues.Получить("empty_string");
    Ожидаем.Что(EmptyString).Равно("");
    Ожидаем.Что(ТипЗнч(EmptyString)).Равно(Тип("Строка"));
    
    // 6. Пустые коллекции
    EmptyArray = SpecialValues.Получить("empty_array");
    Ожидаем.Что(ТипЗнч(EmptyArray)).Равно(Тип("Массив"));
    Ожидаем.Что(EmptyArray.Количество()).Равно(0);
    
    EmptyObject = SpecialValues.Получить("empty_object");
    Ожидаем.Что(ТипЗнч(EmptyObject)).Равно(Тип("Соответствие"));
КонецПроцедуры

&Тест
&ОтображаемоеИмя("Тест парсинга сложного многострочного JSON")
Процедура ТестПарсингаСложногоМногострочногоJSON() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("json.yaml"));
    ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда
    ComplexJSON = ЧтениеYaml.Прочитать(СодержимоеФайла);
    
    // Тогда
    Ожидаем.Что(ComplexJSON).Не_().ЭтоНеопределено();
    Ожидаем.Что(ТипЗнч(ComplexJSON)).Равно(Тип("Соответствие"));
    
    // Проверяем метаданные
    Metadata = ComplexJSON.Получить("metadata");
    Ожидаем.Что(Metadata).Не_().ЭтоНеопределено();
    Ожидаем.Что(Metadata.Получить("version")).Равно("1.0.0");
    Ожидаем.Что(Metadata.Получить("created_at")).Равно("2024-01-15T10:30:00Z");
    
    // Проверяем автора
    Author = Metadata.Получить("author");
    Ожидаем.Что(Author.Получить("name")).Равно("John Doe");
    Ожидаем.Что(Author.Получить("email")).Равно("john.doe@example.com");
    
    Roles = Author.Получить("roles");
    Ожидаем.Что(ТипЗнч(Roles)).Равно(Тип("Массив"));
    Ожидаем.Что(Roles.Количество()).Равно(2);
    Ожидаем.Что(Roles[0]).Равно("admin");
    Ожидаем.Что(Roles[1]).Равно("developer");
    
    // Проверяем приложение
    Application = ComplexJSON.Получить("application");
    Ожидаем.Что(Application.Получить("name")).Равно("YAML Parser");
    Ожидаем.Что(Application.Получить("description")).Равно("Advanced YAML parsing library for OneScript");
    
    // Проверяем особенности (features)
    Features = Application.Получить("features");
    
    // Flow style особенности
    FlowStyle = Features.Получить("flow_style");
    Ожидаем.Что(FlowStyle.Получить("enabled")).Равно(Истина);
    Ожидаем.Что(FlowStyle.Получить("multiline_support")).Равно(Истина);
    Ожидаем.Что(FlowStyle.Получить("nested_objects")).Равно(Истина);
    
    Arrays = FlowStyle.Получить("arrays");
    Ожидаем.Что(ТипЗнч(Arrays)).Равно(Тип("Массив"));
    Ожидаем.Что(Arrays.Количество()).Равно(3);
    Ожидаем.Что(Arrays[0]).Равно("simple");
    Ожидаем.Что(Arrays[1]).Равно("nested");
    Ожидаем.Что(Arrays[2]).Равно("mixed");
    
    // Block style особенности
    BlockStyle = Features.Получить("block_style");
    Ожидаем.Что(BlockStyle.Получить("enabled")).Равно(Истина);
    
    Indentation = BlockStyle.Получить("indentation");
    Ожидаем.Что(Indentation.Получить("spaces")).Равно(2);
    Ожидаем.Что(Indentation.Получить("tabs")).Равно(Ложь);
    Ожидаем.Что(Indentation.Получить("mixed")).Равно(Ложь);
    
    // Продвинутые особенности
    Advanced = Features.Получить("advanced");
    Ожидаем.Что(Advanced.Получить("anchors")).Равно(Истина);
    Ожидаем.Что(Advanced.Получить("aliases")).Равно(Истина);
    Ожидаем.Что(Advanced.Получить("merge_keys")).Равно(Истина);
    Ожидаем.Что(Advanced.Получить("comments")).Равно(Истина);
    
    // Проверяем производительность
    Performance = Application.Получить("performance");
    
    // Бенчмарки
    Benchmarks = Performance.Получить("benchmarks");
    Ожидаем.Что(ТипЗнч(Benchmarks)).Равно(Тип("Массив"));
    Ожидаем.Что(Benchmarks.Количество()).Равно(3);
    
    // Первый бенчмарк
    Benchmark1 = Benchmarks[0];
    Ожидаем.Что(Benchmark1.Получить("test")).Равно("simple_parsing");
    Ожидаем.Что(Benchmark1.Получить("time_ms")).Равно(15.6);
    Ожидаем.Что(Benchmark1.Получить("memory_mb")).Равно(2.1);
    
    // Второй бенчмарк
    Benchmark2 = Benchmarks[1];
    Ожидаем.Что(Benchmark2.Получить("test")).Равно("complex_parsing");
    Ожидаем.Что(Benchmark2.Получить("time_ms")).Равно(87.3);
    Ожидаем.Что(Benchmark2.Получить("memory_mb")).Равно(5.8);
    
    // Третий бенчмарк
    Benchmark3 = Benchmarks[2];
    Ожидаем.Что(Benchmark3.Получить("test")).Равно("large_file_parsing");
    Ожидаем.Что(Benchmark3.Получить("time_ms")).Равно(234.7);
    Ожидаем.Что(Benchmark3.Получить("memory_mb")).Равно(12.4);
    
    // Статистика
    Statistics = Performance.Получить("statistics");
    Ожидаем.Что(Statistics.Получить("total_tests")).Равно(156);
    Ожидаем.Что(Statistics.Получить("passed")).Равно(154);
    Ожидаем.Что(Statistics.Получить("failed")).Равно(2);
    Ожидаем.Что(Statistics.Получить("success_rate")).Равно(98.7);
    Ожидаем.Что(Statistics.Получить("average_time")).Равно(45.2);
    
    // Проверяем конфигурацию
    Configuration = ComplexJSON.Получить("configuration");
    
    // Настройки парсинга
    Parsing = Configuration.Получить("parsing");
    Ожидаем.Что(Parsing.Получить("strict_mode")).Равно(Ложь);
    Ожидаем.Что(Parsing.Получить("error_handling")).Равно("graceful");
    Ожидаем.Что(Parsing.Получить("encoding")).Равно("utf-8");
    Ожидаем.Что(Parsing.Получить("max_depth")).Равно(100);
    Ожидаем.Что(Parsing.Получить("timeout_ms")).Равно(5000);
    
    // Настройки вывода
    Output = Configuration.Получить("output");
    Ожидаем.Что(Output.Получить("format")).Равно("native");
    Ожидаем.Что(Output.Получить("preserve_types")).Равно(Истина);
    Ожидаем.Что(Output.Получить("null_values")).ЭтоНеопределено();
    
    // Пустые коллекции в конфигурации
    EmptyCollections = Output.Получить("empty_collections");
    Ожидаем.Что(EmptyCollections).Не_().ЭтоНеопределено();
    
    EmptyArrays = EmptyCollections.Получить("arrays");
    Ожидаем.Что(ТипЗнч(EmptyArrays)).Равно(Тип("Массив"));
    Ожидаем.Что(EmptyArrays.Количество()).Равно(0);
    
    EmptyObjects = EmptyCollections.Получить("objects");
    Ожидаем.Что(ТипЗнч(EmptyObjects)).Равно(Тип("Соответствие"));
КонецПроцедуры
