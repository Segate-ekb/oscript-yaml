#Использовать asserts
#Использовать collectionos
#Использовать ".."
#Использовать "."


&ТестовыйНабор
Процедура ПриСозданииОбъекта()

	// В качестве источника тестов используется:
	// https://github.com/yaml/yaml-test-suite.git

КонецПроцедуры

&ПараметризованныйТест
&ИсточникВыражение("() -> КоллекцияКаталоговТестовыхДанных()")
Процедура ТестКорректногоYAML(Каталог) Экспорт
	
	ПутьККаталогу = ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("yaml-test-suit/" + Каталог + "/");

	СодержимоеYAML = ТестовыеУтилиты.ПрочитатьТекстФайла(ПутьККаталогу + "in.yaml");
	ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();

	РезультатYAML = ЧтениеYaml.ПрочитатьYaml(СодержимоеYAML);
	РезультатСтрокой = ДанныеВСтрокуJSON(РезультатYAML);

	Образец = ПрочитатьJSONизФайла(ПутьККаталогу + "in.json");
	ОбразецСтрокой = ДанныеВСтрокуJSON(Образец);

	Ожидаем.Что(РезультатСтрокой).Равно(ОбразецСтрокой);

КонецПроцедуры

&ПараметризованныйТест
&ИсточникВыражение("() -> КоллекцияКаталоговТестовыхДанных(Истина)")
Процедура ТестНекорректногоYAML(Каталог, Описание) Экспорт
	
	ПутьККаталогу = ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("yaml-test-suit/" + Каталог + "/");

	СодержимоеYAML = ТестовыеУтилиты.ПрочитатьТекстФайла(ПутьККаталогу + "in.yaml");
	ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();

	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(СодержимоеYAML);

	Ожидаем.Что(ЧтениеYaml)
		.Метод("ПрочитатьYaml", МассивПараметров)
		.ВыбрасываетИсключение();

КонецПроцедуры

Функция КоллекцияКаталоговТестовыхДанных(ИскатьОшибки = Ложь) Экспорт

	ПутьКФайлам = ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("yaml-test-suit");
	НайденныеФайлы = НайтиФайлы(ПутьКФайлам, "===", Истина);

	КоллекцияАргументов = Новый Массив;

	Для Каждого Файл Из НайденныеФайлы Цикл
		Если ЕстьФайлОшибки(Файл.Путь) <> ИскатьОшибки Тогда
			Продолжить;
		КонецЕсли;

		Каталог = Новый Файл(Файл.Путь);
		АргументыТеста = Списки.ИзЭлементов(Каталог.Имя);
		КоллекцияАргументов.Добавить(АргументыТеста);
	КонецЦикла;

	Возврат ПроцессорыКоллекций.ИзКоллекции(КоллекцияАргументов);

КонецФункции

Функция ПрочитатьJSONизФайла(ПутьКФайлу)
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.ОткрытьФайл(ПутьКФайлу);
	Результат = ПрочитатьJSON(ЧтениеJSON, Истина);
	ЧтениеJSON.Закрыть();
	
	Возврат Результат;

КонецФункции

Функция ДанныеВСтрокуJSON(Данные)
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(
		ПереносСтрокJSON.Нет,
	);
	
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	ЗаписатьJSON(ЗаписьJSON, Данные);
	Результат = ЗаписьJSON.Закрыть();
	
	Возврат Результат;

КонецФункции

Функция ЕстьФайлОшибки(ПутьККаталогу)
	
	ПутьКФайлуОшибки = ОбъединитьПути(ПутьККаталогу, "error");
	ФайлОшибки = Новый Файл(ПутьКФайлуОшибки);
	
	Возврат ФайлОшибки.Существует();

КонецФункции
