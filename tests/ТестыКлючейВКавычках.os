#Использовать asserts
#Использовать ".."
#Использовать "."

&ТестовыйНабор
Процедура ПриСозданииОбъекта()
КонецПроцедуры

&Тест
&ОтображаемоеИмя("Тест обработки ключей в двойных кавычках")
Процедура ТестКлючейВДвойныхКавычках() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    СтрокаYAML = """quoted key"": value";
    
    // Когда
    Результат = Парсер.ПрочитатьYaml(СтрокаYAML);
    
    // Тогда
    Ожидаем.Что(Результат).ИмеетТип("Соответствие");
    Ожидаем.Что(Результат.Получить("quoted key")).Равно("value");
КонецПроцедуры

&Тест
&ОтображаемоеИмя("Тест обработки ключей в одинарных кавычках")
Процедура ТестКлючейВОдинарныхКавычках() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    СтрокаYAML = "'quoted key': value";
    
    // Когда
    Результат = Парсер.ПрочитатьYaml(СтрокаYAML);
    
    // Тогда
    Ожидаем.Что(Результат).ИмеетТип("Соответствие");
    Ожидаем.Что(Результат.Получить("quoted key")).Равно("value");
КонецПроцедуры

&Тест
&ОтображаемоеИмя("Тест обработки ключей с пробелами в кавычках")
Процедура ТестКлючейСПробеламиВКавычках() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    СтрокаYAML = """key with spaces"": ""value with spaces""";
    
    // Когда
    Результат = Парсер.ПрочитатьYaml(СтрокаYAML);
    
    // Тогда
    Ожидаем.Что(Результат).ИмеетТип("Соответствие");
    Ожидаем.Что(Результат.Получить("key with spaces")).Равно("value with spaces");
КонецПроцедуры

&Тест
&ОтображаемоеИмя("Тест обработки ключей со специальными символами в кавычках")
Процедура ТестКлючейСоСпециальнымиСимволами() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    СтрокаYAML = """key:with:colons"": normal_value";
    
    // Когда
    Результат = Парсер.ПрочитатьYaml(СтрокаYAML);
    
    // Тогда
    Ожидаем.Что(Результат).ИмеетТип("Соответствие");
    Ожидаем.Что(Результат.Получить("key:with:colons")).Равно("normal_value");
КонецПроцедуры

&Тест
&ОтображаемоеИмя("Тест обработки ключей с цифрами в кавычках")
Процедура ТестКлючейСЦифрамиВКавычках() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    СтрокаYAML = """123"": numeric_key";
    
    // Когда
    Результат = Парсер.ПрочитатьYaml(СтрокаYAML);
    
    // Тогда
    Ожидаем.Что(Результат).ИмеетТип("Соответствие");
    Ожидаем.Что(Результат.Получить("123")).Равно("numeric_key");
КонецПроцедуры

&Тест
&ОтображаемоеИмя("Тест смешанных ключей (в кавычках и без)")
Процедура ТестСмешанныхКлючей() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    СтрокаYAML = """quoted_key"": quoted_value" + Символы.ПС +
                  "normal_key: normal_value" + Символы.ПС +
                  "'single_quoted': single_value";
    
    // Когда
    Результат = Парсер.ПрочитатьYaml(СтрокаYAML);
    
    // Тогда
    Ожидаем.Что(Результат).ИмеетТип("Соответствие");
    Ожидаем.Что(Результат.Получить("quoted_key")).Равно("quoted_value");
    Ожидаем.Что(Результат.Получить("normal_key")).Равно("normal_value");
    Ожидаем.Что(Результат.Получить("single_quoted")).Равно("single_value");
КонецПроцедуры

&Тест
&ОтображаемоеИмя("Тест ключей в кавычках во вложенных структурах")
Процедура ТестКлючейВКавычкахВоВложенныхСтруктурах() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    СтрокаYAML = """parent key"":" + Символы.ПС +
                  "  ""child key"": child_value" + Символы.ПС +
                  "  normal_child: normal_value";
    
    // Когда
    Результат = Парсер.ПрочитатьYaml(СтрокаYAML);
    
    // Тогда
    Ожидаем.Что(Результат).ИмеетТип("Соответствие");
    
    РодительскийОбъект = Результат.Получить("parent key");
    Ожидаем.Что(РодительскийОбъект).ИмеетТип("Соответствие");
    Ожидаем.Что(РодительскийОбъект.Получить("child key")).Равно("child_value");
    Ожидаем.Что(РодительскийОбъект.Получить("normal_child")).Равно("normal_value");
КонецПроцедуры

&Тест
&ОтображаемоеИмя("Тест парсинга файла с ключами в кавычках")
Процедура ТестПарсингаФайлаСКлючамиВКавычках() Экспорт
    // Дано
    Парсер = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    ПутьКФайлу = ОбъединитьПути(ТекущийСценарий().Каталог, "fixtures", "quoted_keys.yaml");
    
    Текст = Новый ЧтениеТекста(ПутьКФайлу, КодировкаТекста.UTF8);
    СодержимоеФайла = Текст.Прочитать();
    Текст.Закрыть();
    
    // Когда
    Результат = Парсер.ПрочитатьYaml(СодержимоеФайла);
    
    // Тогда
    Ожидаем.Что(Результат).ИмеетТип("Соответствие");
    
    // Проверяем ключи верхнего уровня
    Ожидаем.Что(Результат.Получить("quoted key")).Равно("simple value");
    Ожидаем.Что(Результат.Получить("single quoted key")).Равно("another value");
    Ожидаем.Что(Результат.Получить("key with spaces")).Равно("value with spaces");
    Ожидаем.Что(Результат.Получить("key:with:colons")).Равно("works too");
    Ожидаем.Что(Результат.Получить("123")).Равно("numeric key name");
    Ожидаем.Что(Результат.Получить("normal_key")).Равно("normal value");
    
    // Проверяем вложенные структуры
    РодительскийОбъект = Результат.Получить("parent object");
    Ожидаем.Что(РодительскийОбъект).ИмеетТип("Соответствие");
    Ожидаем.Что(РодительскийОбъект.Получить("child key")).Равно("child value");
    Ожидаем.Что(РодительскийОбъект.Получить("normal_child")).Равно("normal value");
    Ожидаем.Что(РодительскийОбъект.Получить("another quoted")).Равно("another value");
    
    // Проверяем массивы с ключами в кавычках
    МассивЭлементов = Результат.Получить("items");
    Ожидаем.Что(МассивЭлементов).ИмеетТип("Массив");
    Ожидаем.Что(МассивЭлементов.Количество()).Равно(3);
    
    Ожидаем.Что(МассивЭлементов[0].Получить("first item")).Равно("value1");
    Ожидаем.Что(МассивЭлементов[1].Получить("second item")).Равно("value2");
    Ожидаем.Что(МассивЭлементов[2].Получить("normal_item")).Равно("value3");
КонецПроцедуры
