#Использовать asserts
#Использовать ".."
#Использовать "."

&ТестовыйНабор
Процедура ПриСозданииОбъекта() Экспорт
КонецПроцедуры

&Тест
Процедура ТестПарсингаВложенныхОбъектовВМассиве() Экспорт
    // Дано
    СодержимоеФайла = ТестовыеУтилиты.ПрочитатьТекстФайла(ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("nested_array_object.yaml"));
    ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда
    Результат = ЧтениеYaml.ПрочитатьYaml(СодержимоеФайла);
    
    // Тогда
    Ожидаем.Что(Результат).Не_().ЭтоНеопределено();
    
    Volumes = Результат.Получить("volumes");
    Ожидаем.Что(Volumes).Не_().ЭтоНеопределено();
    Ожидаем.Что(Volumes.Количество()).Равно(3);
    
    // Первый элемент должен быть соответствием с вложенной структурой
    ПервыйЭлемент = Volumes[0];
    Ожидаем.Что(ТипЗнч(ПервыйЭлемент)).Равно(Тип("Соответствие"));
    
    SonarrConfig = ПервыйЭлемент.Получить("sonarr_config");
    Ожидаем.Что(SonarrConfig).Не_().ЭтоНеопределено();
    Ожидаем.Что(ТипЗнч(SonarrConfig)).Равно(Тип("Соответствие"));
    Ожидаем.Что(SonarrConfig.Получить("test")).Равно("/config");
    Ожидаем.Что(SonarrConfig.Получить("test2")).Равно("/downloads");
    
    // Второй и третий элементы должны быть строками
    Ожидаем.Что(Volumes[1]).Равно("media:/plex_media");
    Ожидаем.Что(Volumes[2]).Равно("transmission_download:/downloads");
КонецПроцедуры

&Тест
Процедура ТестВложенныхМассивовВОбъектахМассива() Экспорт
    // Дано - тестируем случай, когда в объекте массива есть вложенные массивы
    СодержимоеYAML = "services:" + Символы.ПС +
    "  - app:" + Символы.ПС +
    "      name: myapp" + Символы.ПС +
    "      ports:" + Символы.ПС +
    "        - 8080" + Символы.ПС +
    "        - 9090" + Символы.ПС +
    "      envs:" + Символы.ПС +
    "        - VAR1=value1" + Символы.ПС +
    "        - VAR2=value2";
    
    ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда
    Результат = ЧтениеYaml.ПрочитатьYaml(СодержимоеYAML);
    
    // Тогда
    Services = Результат.Получить("services");
    Ожидаем.Что(Services.Количество()).Равно(1);
    
    ПервыйСервис = Services[0];
    App = ПервыйСервис.Получить("app");
    Ожидаем.Что(App.Получить("name")).Равно("myapp");
    
    Ports = App.Получить("ports");
    Ожидаем.Что(ТипЗнч(Ports)).Равно(Тип("Массив"));
    Ожидаем.Что(Ports.Количество()).Равно(2);
    Ожидаем.Что(Ports[0]).Равно(8080);
    Ожидаем.Что(Ports[1]).Равно(9090);
    
    Envs = App.Получить("envs");
    Ожидаем.Что(ТипЗнч(Envs)).Равно(Тип("Массив"));
    Ожидаем.Что(Envs.Количество()).Равно(2);
    Ожидаем.Что(Envs[0]).Равно("VAR1=value1");
    Ожидаем.Что(Envs[1]).Равно("VAR2=value2");
КонецПроцедуры

&Тест
Процедура ТестМножественныхОбъектовВМассиве() Экспорт
    // Дано - тестируем случай с несколькими объектами в массиве
    СодержимоеYAML = "users:" + Символы.ПС +
    "  - name: Alice" + Символы.ПС +
    "    age: 30" + Символы.ПС +
    "    active: true" + Символы.ПС +
    "  - name: Bob" + Символы.ПС +
    "    age: 25" + Символы.ПС +
    "    active: false";
    
    ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();
    
    // Когда
    Результат = ЧтениеYaml.ПрочитатьYaml(СодержимоеYAML);
    
    // Тогда
    Users = Результат.Получить("users");
    Ожидаем.Что(Users.Количество()).Равно(2);
    
    // Первый пользователь
    Alice = Users[0];
    Ожидаем.Что(Alice.Получить("name")).Равно("Alice");
    Ожидаем.Что(Alice.Получить("age")).Равно(30);
    Ожидаем.Что(Alice.Получить("active")).Равно(Истина);
    
    // Второй пользователь
    Bob = Users[1];
    Ожидаем.Что(Bob.Получить("name")).Равно("Bob");
    Ожидаем.Что(Bob.Получить("age")).Равно(25);
    Ожидаем.Что(Bob.Получить("active")).Равно(Ложь);
КонецПроцедуры
