# Тест парсинга JSON как валидного YAML
# Проверяем различные типы данных JSON в flow style формате

# Простые объекты JSON
simple_json: {"name": "John", 
  "age": 30, 
              "active": true}
user_json: {"id": 1, "name": "Alice", "email": "alice@example.com", "verified": false, "score": 95.5}

# Массивы JSON  
tags_json: ["production", "api", "v2"]
numbers_json: [1, 2, 3.14, -5, 0]
mixed_json: [1, "hello", true, null, 42.7]

# Вложенные объекты JSON
nested_json: {"user": {"name": "Bob", "age": 25}, "preferences": {"theme": "dark", "notifications": true}}

# Сложная структура JSON (в одну строку)
api_json: {"version": "2.1.0", "endpoints": [{"path": "/users", "method": "GET", "auth": true}, {"path": "/posts", "method": "POST", "auth": false}], "config": {"timeout": 30000, "retries": 3, "cache": {"enabled": false, "ttl": null}, "features": {"graphql": true, "websockets": false}}, "stats": {"requests_per_minute": 1250.75, "error_rate": 0.02, "uptime": 99.99, "tags": ["prod", "stable"], "empty_array": [], "empty_object": {}, "null_value": null}}

# Специальные значения JSON (в одну строку)
special_values: {"string": "test string", "integer": 42, "float": 3.14159, "boolean_true": true, "boolean_false": false, "null_value": null, "empty_string": "", "empty_array": [], "empty_object": {}}
