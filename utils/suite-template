#Использовать asserts
#Использовать collectionos
#Использовать fs
#Использовать ".."
#Использовать "."

Перем ПутьКТестовымДанным;

&ТестовыйНабор(Характер = "Одиночка")
Процедура ПриСозданииОбъекта()
	ПутьКТестовымДанным = ТестовыеУтилиты.ПолучитьПутьКТестовымДанным("yaml-test-suite");
КонецПроцедуры


Процедура ВыполнитьТест(Каталог) Экспорт
	
	ПутьККаталогу = ОбъединитьПути(ПутьКТестовымДанным, Каталог);

	ПутьYAML = ОбъединитьПути(ПутьККаталогу, "in.yaml");
	СодержимоеYAML = ТестовыеУтилиты.ПрочитатьТекстФайла(ПутьYAML);
	ЧтениеYaml = ТестовыеУтилиты.СоздатьЭкземплярПарсера();

	РезультатYAML = ЧтениеYaml.ПрочитатьYaml(СодержимоеYAML);
	РезультатСтрокой = ДанныеВСтрокуJSON(РезультатYAML);

	ПутьКФайлуОшибки = ОбъединитьПути(ПутьККаталогу, "error");
	ПутьКФайлуJson = ОбъединитьПути(ПутьККаталогу, "in.json");
	Если ФС.ФайлСуществует(ПутьКФайлуОшибки) Тогда
		// Это ошибка
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(СодержимоеYAML);

		Ожидаем.Что(ЧтениеYaml)
			.Метод("ПрочитатьYaml", МассивПараметров)
			.ВыбрасываетИсключение();

	ИначеЕсли ФС.ФайлСуществует(ПутьКФайлуJson) Тогда
		РезультатJSON = ПрочитатьJSONизФайла(ПутьКФайлуJson);
		ОбразецСтрокой = ДанныеВСтрокуJSON(РезультатJSON);

		Ожидаем.Что(РезультатСтрокой).Равно(ОбразецСтрокой);
	Иначе
		Возврат; // !TODO: Тут вообще было бы хорошо помечать тест как broken
	КонецЕсли;

КонецПроцедуры


Функция ПрочитатьJSONизФайла(ПутьКФайлу)
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.ОткрытьФайл(ПутьКФайлу);
	Результат = ПрочитатьJSON(ЧтениеJSON, Истина);
	ЧтениеJSON.Закрыть();
	
	Возврат Результат;

КонецФункции

Функция ДанныеВСтрокуJSON(Данные)
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(
		ПереносСтрокJSON.Нет
	);
	
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	ЗаписатьJSON(ЗаписьJSON, Данные);
	Результат = ЗаписьJSON.Закрыть();
	
	Возврат Результат;

КонецФункции
