// Модуль для преобразования строковых значений YAML в соответствующие типы 1С
//

// Преобразует строковое значение YAML в соответствующий тип 1С
//
// Параметры:
//   ЗначениеСтрока - Строка - значение для преобразования
//
// Возвращаемое значение:
//   Произвольный - значение, преобразованное в соответствующий тип
//
Функция ПреобразоватьЗначение(ЗначениеСтрока) Экспорт
	ЗначениеСтрока = СокрЛП(ЗначениеСтрока);
	
	// Специальная проверка на null перед другими преобразованиями
	Если НРег(ЗначениеСтрока) = "null" ИЛИ ЗначениеСтрока = "~" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// Обработка булевых значений
	РезультатПреобразованияБулево = ПреобразоватьБулевоИлиNull(ЗначениеСтрока);
	Если РезультатПреобразованияБулево <> Неопределено Тогда
		Возврат РезультатПреобразованияБулево;
	КонецЕсли;
	
	// Обработка чисел
	Если ЭтоЧисло(ЗначениеСтрока) Тогда
		Возврат Число(ЗначениеСтрока);
	КонецЕсли;
	
	// Обработка строк в кавычках
	Если ЭтоСтрокаВКавычках(ЗначениеСтрока) Тогда
		Возврат Сред(ЗначениеСтрока, 2, СтрДлина(ЗначениеСтрока) - 2);
	КонецЕсли;
	
	// Если ничего не подошло, возвращаем как есть
	Возврат ЗначениеСтрока;
КонецФункции

// Преобразует булево значение
//
// Параметры:
//   ЗначениеСтрока - Строка - строка для преобразования
//
// Возвращаемое значение:
//   Булево, Неопределено - результат преобразования или Неопределено если преобразование не выполнено
//
Функция ПреобразоватьБулевоИлиNull(ЗначениеСтрока)
	ЗначениеВНижнемРегистре = НРег(ЗначениеСтрока);
	
	Если ЗначениеВНижнемРегистре = "true" ИЛИ ЗначениеВНижнемРегистре = "yes" Тогда
		Возврат Истина;
	ИначеЕсли ЗначениеВНижнемРегистре = "false" ИЛИ ЗначениеВНижнемРегистре = "no" Тогда
		Возврат Ложь;
	Иначе
		// Если ничего не подошло, возвращаем Неопределено и указываем, что преобразование не было выполнено
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

// Проверка, является ли строка числом
//
// Параметры:
//   ЗначениеСтрока - Строка - строка для проверки
//
// Возвращаемое значение:
//   Булево - Истина, если строка представляет число
//
Функция ЭтоЧисло(ЗначениеСтрока) Экспорт
	Если НЕ ЗначениеЗаполнено(ЗначениеСтрока) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Убираем знак для проверки
	СтрокаДляПроверки = УбратьЗнакЧисла(ЗначениеСтрока);
	Если НЕ ЗначениеЗаполнено(СтрокаДляПроверки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// Проверяем каждый символ
	Возврат ВсеСимволыЧисловые(СтрокаДляПроверки);
КонецФункции

// Убирает знак числа (+ или -)
//
// Параметры:
//   ЗначениеСтрока - Строка - строка с числом
//
// Возвращаемое значение:
//   Строка - строка без знака
//
Функция УбратьЗнакЧисла(ЗначениеСтрока)
	ПервыйСимвол = Лев(ЗначениеСтрока, 1);
	Если ПервыйСимвол = "-" ИЛИ ПервыйСимвол = "+" Тогда
		Возврат Сред(ЗначениеСтрока, 2);
	Иначе
		Возврат ЗначениеСтрока;
	КонецЕсли;
КонецФункции

// Проверка, что все символы в строке числовые
//
// Параметры:
//   СтрокаДляПроверки - Строка - строка для проверки
//
// Возвращаемое значение:
//   Булево - Истина, если все символы числовые
//
Функция ВсеСимволыЧисловые(СтрокаДляПроверки)
	ВстретилаТочка = Ложь;
	
	Для Позиция = 1 По СтрДлина(СтрокаДляПроверки) Цикл
		Символ = Сред(СтрокаДляПроверки, Позиция, 1);
		
		Если Символ = "." Тогда
			Если ВстретилаТочка Тогда
				Возврат Ложь; // Вторая точка недопустима
			Иначе
				ВстретилаТочка = Истина;
			КонецЕсли;
		ИначеЕсли НЕ ЭтоЦифра(Символ) Тогда
			Возврат Ложь;
		Иначе
			// Символ является цифрой
			;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

// Проверка, является ли символ цифрой
//
// Параметры:
//   Символ - Строка - символ для проверки
//
// Возвращаемое значение:
//   Булево - Истина, если символ - цифра
//
Функция ЭтоЦифра(Символ)
	Возврат Символ >= "0" И Символ <= "9";
КонецФункции

// Проверка, является ли строка строкой в кавычках
//
// Параметры:
//   ЗначениеСтрока - Строка - строка для проверки
//
// Возвращаемое значение:
//   Булево - Истина, если строка в кавычках
//
Функция ЭтоСтрокаВКавычках(ЗначениеСтрока) Экспорт
	Если СтрДлина(ЗначениеСтрока) < 2 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПервыйСимвол = Лев(ЗначениеСтрока, 1);
	ПоследнийСимвол = Прав(ЗначениеСтрока, 1);
	
	Возврат (ПервыйСимвол = """" И ПоследнийСимвол = """") 
		ИЛИ (ПервыйСимвол = "'" И ПоследнийСимвол = "'");
КонецФункции

// Убирает кавычки с ключа, если они присутствуют
//
// Параметры:
//   Ключ - Строка - ключ для обработки
//
// Возвращаемое значение:
//   Строка - ключ без кавычек
//
Функция ОбработатьКлючВКавычках(Ключ) Экспорт
	Ключ = СокрЛП(Ключ);
	
	Если ЭтоСтрокаВКавычках(Ключ) Тогда
		Возврат Сред(Ключ, 2, СтрДлина(Ключ) - 2);
	КонецЕсли;
	
	Возврат Ключ;
КонецФункции
