// Модуль для парсинга ключ-значение структур YAML
//

// Разбор строки на ключ и значение
//
// Параметры:
//   ОчищеннаяСтрока - Строка - строка для разбора
//
// Возвращаемое значение:
//   Структура - структура с ключом и значением или Неопределено
//
Функция РазобратьКлючЗначение(ОчищеннаяСтрока) Экспорт
	ПозицияДвоеточия = Найти(ОчищеннаяСтрока, ":");
	Если ПозицияДвоеточия = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Ключ = СокрЛП(Лев(ОчищеннаяСтрока, ПозицияДвоеточия - 1));
	ЗначениеСтрока = СокрЛП(Сред(ОчищеннаяСтрока, ПозицияДвоеточия + 1));
	
	// Удаляем комментарии из значения
	ЗначениеСтрока = ПарсерУровней.УдалитьКомментарии(ЗначениеСтрока);
	
	Возврат Новый Структура("Ключ, Значение", Ключ, ЗначениеСтрока);
КонецФункции

// Разбор ключ-значение в массиве
//
// Параметры:
//   ЗначениеЭлемента - Строка - строка для разбора
//
// Возвращаемое значение:
//   Структура - структура с ключом и значением или Неопределено
//
Функция РазобратьКлючЗначениеВМассиве(ЗначениеЭлемента) Экспорт
	ПозицияДвоеточия = Найти(ЗначениеЭлемента, ":");
	Если ПозицияДвоеточия = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Ключ = СокрЛП(Лев(ЗначениеЭлемента, ПозицияДвоеточия - 1));
	ЗначениеСтрока = СокрЛП(Сред(ЗначениеЭлемента, ПозицияДвоеточия + 1));
	
	// Удаляем комментарии из значения
	ЗначениеСтрока = ПарсерУровней.УдалитьКомментарии(ЗначениеСтрока);
	
	Возврат Новый Структура("Ключ, Значение", Ключ, ЗначениеСтрока);
КонецФункции

// Проверка, является ли строка YAML merge
//
// Параметры:
//   ОчищеннаяСтрока - Строка - очищенная строка
//
// Возвращаемое значение:
//   Булево - Истина, если это YAML merge
//
Функция ЭтоYAMLMerge(ОчищеннаяСтрока) Экспорт
	Возврат Лев(ОчищеннаяСтрока, 3) = "<<:";
КонецФункции

// Обработка YAML merge
//
// Параметры:
//   ОчищеннаяСтрока - Строка - строка с merge
//   ТекущийКонтекст - Соответствие - текущий контекст
//   МенеджерЯкорей - Объект - менеджер якорей
//
Процедура ОбработатьYAMLMerge(ОчищеннаяСтрока, ТекущийКонтекст, МенеджерЯкорей) Экспорт
	ЗначениеСтрока = СокрЛП(Сред(ОчищеннаяСтрока, 4));
	
	Если Лев(ЗначениеСтрока, 1) = "*" Тогда
		ИмяЯкоря = Сред(ЗначениеСтрока, 2);
		ЗначениеЯкоря = МенеджерЯкорей.ПолучитьЗначениеЯкоря(ИмяЯкоря);
		
		Если ЗначениеЯкоря <> Неопределено 
			И ТипЗнч(ЗначениеЯкоря) = Тип("Соответствие") 
			И ТипЗнч(ТекущийКонтекст) = Тип("Соответствие") Тогда
			СлитьСоответствия(ЗначениеЯкоря, ТекущийКонтекст);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Слияние двух соответствий (копирование всех ключей из источника в приемник)
//
// Параметры:
//   Источник - Соответствие - источник данных
//   Приемник - Соответствие - приемник данных
//
Процедура СлитьСоответствия(Источник, Приемник) Экспорт
	Для Каждого КлючЗначение Из Источник Цикл
		Приемник.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
КонецПроцедуры
