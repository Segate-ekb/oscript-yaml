// Модуль для работы с уровнями отступов в YAML

// Переменные модуля для отслеживания отступов
Перем СловарьОтступовПоУровням; // Соответствие: Уровень -> Отступ в символах

// Проверка, является ли строка пустой или комментарием
//
// Параметры:
//   Строка - Строка - строка для проверки
//
// Возвращаемое значение:
//   Булево - Истина, если строка пустая или комментарий
//
Функция ЭтоПустаяСтрокаИлиКомментарий(Строка) Экспорт
	ОчищеннаяСтрока = СокрЛП(Строка);
	Возврат ПустаяСтрока(ОчищеннаяСтрока) ИЛИ Лев(ОчищеннаяСтрока, 1) = "#";
КонецФункции

// Проверка, является ли строка элементом массива
//
// Параметры:
//   ОчищеннаяСтрока - Строка - очищенная строка
//
// Возвращаемое значение:
//   Булево - Истина, если это элемент массива
//
Функция ЭтоЭлементМассива(ОчищеннаяСтрока) Экспорт
	Возврат Лев(ОчищеннаяСтрока, 1) = "-";
КонецФункции

// Обновление стека контекстов при изменении уровня отступа
//
// Параметры:
//   СтекКонтекстов - Массив - стек контекстов
//   УровеньОтступа - Число - новый уровень отступа
//
Процедура ОбновитьСтекКонтекстов(СтекКонтекстов, УровеньОтступа) Экспорт
	Пока СтекКонтекстов.Количество() > УровеньОтступа + 1 Цикл
		СтекКонтекстов.Удалить(СтекКонтекстов.ВГраница());
	КонецЦикла;
КонецПроцедуры

// Вычисление уровня отступа строки
//
// Параметры:
//   Строка - Строка - строка для анализа
//
// Возвращаемое значение:
//   Число - уровень отступа (количество уровней)
//
Функция ПолучитьУровеньОтступа(Строка) Экспорт
	ОтступВСимволах = ПолучитьОтступВСимволах(Строка);
	Возврат ОпределитьУровеньОтступа(ОтступВСимволах);
КонецФункции

// Получение отступа в символах
//
// Параметры:
//   Строка - Строка - строка для анализа
//
// Возвращаемое значение:
//   Число - отступ в символах
//
Функция ПолучитьОтступВСимволах(Строка) Экспорт
	ПробелыТабуляции = 4;
	ОтступВСимволах = 0;
	Для Позиция = 1 По СтрДлина(Строка) Цикл
		Символ = Сред(Строка, Позиция, 1);
		Если Символ = " " Тогда
			ОтступВСимволах = ОтступВСимволах + 1;
		ИначеЕсли Символ = Символы.Таб Тогда
			ОтступВСимволах = ОтступВСимволах + ПробелыТабуляции; // Считаем таб как 4 пробела
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат ОтступВСимволах;
КонецФункции

// Удаляет комментарии из строки
//
// Параметры:
//   ЗначениеСтрока - Строка - строка для обработки
//
// Возвращаемое значение:
//   Строка - строка без комментариев
//
Функция УдалитьКомментарии(ЗначениеСтрока) Экспорт
	ПозицияКомментария = Найти(ЗначениеСтрока, "#");
	
	Если ПозицияКомментария > 0 Тогда
		Возврат СокрЛП(Лев(ЗначениеСтрока, ПозицияКомментария - 1));
	КонецЕсли;
	
	Возврат ЗначениеСтрока;
КонецФункции

// Инициализация модуля
//
Процедура ИнициализироватьПарсерУровней() Экспорт
	СловарьОтступовПоУровням = Новый Соответствие;
КонецПроцедуры

// Очистка словаря отступов (для повторного использования парсера)
//
Процедура ОчиститьСловарьОтступов() Экспорт
	СловарьОтступовПоУровням.Очистить();
КонецПроцедуры

// Валидация корректности отступа для заданного уровня
//
// Параметры:
//   Строка - Строка - строка для проверки
//
// Возвращаемое значение:
//   Структура - результат валидации со свойствами:
//     * Корректный - Булево - истина, если отступ корректен
//     * УровеньОтступа - Число - уровень отступа
//     * ОтступВСимволах - Число - количество символов отступа
//     * ОписаниеОшибки - Строка - описание ошибки, если отступ некорректен
//
Функция ВалидироватьОтступ(Строка) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Корректный", Истина);
	Результат.Вставить("УровеньОтступа", 0);
	Результат.Вставить("ОтступВСимволах", 0);
	Результат.Вставить("ОписаниеОшибки", "");
	
	// Пропускаем пустые строки и комментарии
	Если ЭтоПустаяСтрокаИлиКомментарий(Строка) Тогда
		Возврат Результат;
	КонецЕсли;
	
	ОтступВСимволах = ПолучитьОтступВСимволах(Строка);
	
	// Определяем уровень отступа на основе известных отступов
	УровеньОтступа = ОпределитьУровеньОтступа(ОтступВСимволах);
	
	Результат.УровеньОтступа = УровеньОтступа;
	Результат.ОтступВСимволах = ОтступВСимволах;
	
	// Если уровень определить не удалось, значит отступ некорректен
	Если УровеньОтступа = -1 Тогда
		Результат.Корректный = Ложь;
		Результат.ОписаниеОшибки = СтрШаблон("Несогласованный отступ. Найдено: %1 пробел(ов)", ОтступВСимволах);
		Возврат Результат;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

// Определяет уровень отступа на основе количества пробелов
//
// Параметры:
//   ОтступВСимволах - Число - количество пробелов в отступе
//
// Возвращаемое значение:
//   Число - уровень отступа или -1 если отступ некорректен
//
Функция ОпределитьУровеньОтступа(ОтступВСимволах) Экспорт
	// Уровень 0 - всегда без отступа
	Если ОтступВСимволах = 0 Тогда
		// Регистрируем уровень 0, если его еще нет
		Если СловарьОтступовПоУровням.Получить(0) = Неопределено Тогда
			СловарьОтступовПоУровням.Вставить(0, 0);
		КонецЕсли;
		Возврат 0;
	КонецЕсли;
	
	// Ищем точное соответствие среди известных отступов
	Для Каждого КлючЗначение Из СловарьОтступовПоУровням Цикл
		Если КлючЗначение.Значение = ОтступВСимволах Тогда
			Возврат КлючЗначение.Ключ;
		КонецЕсли;
	КонецЦикла;
	
	// Если точного соответствия нет, можем создать новый уровень только если
	// отступ строго больше максимального известного отступа
	МаксимальныйИзвестныйОтступ = ПолучитьМаксимальныйОтступ();
	
	Если ОтступВСимволах <= МаксимальныйИзвестныйОтступ Тогда
		// Отступ меньше или равен уже существующему - это ошибка согласованности
		Возврат -1;
	КонецЕсли;
	
	// Создаем новый уровень
	НовыйУровень = ПолучитьМаксимальныйУровень() + 1;
	СловарьОтступовПоУровням.Вставить(НовыйУровень, ОтступВСимволах);
	
	Возврат НовыйУровень;
КонецФункции

// Получает максимальный отступ среди всех зарегистрированных уровней
//
// Возвращаемое значение:
//   Число - максимальный отступ
//
Функция ПолучитьМаксимальныйОтступ()
	МаксимальныйОтступ = -1;
	Для Каждого КлючЗначение Из СловарьОтступовПоУровням Цикл
		МаксимальныйОтступ = Макс(МаксимальныйОтступ, КлючЗначение.Значение);
	КонецЦикла;
	Возврат МаксимальныйОтступ;
КонецФункции

// Получает максимальный уровень среди всех зарегистрированных уровней
//
// Возвращаемое значение:
//   Число - максимальный уровень
//
Функция ПолучитьМаксимальныйУровень()
	МаксимальныйУровень = -1;
	Для Каждого КлючЗначение Из СловарьОтступовПоУровням Цикл
		МаксимальныйУровень = Макс(МаксимальныйУровень, КлючЗначение.Ключ);
	КонецЦикла;
	Возврат МаксимальныйУровень;
КонецФункции
